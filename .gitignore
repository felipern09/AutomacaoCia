# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintainted in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
/Ponto/txt/Ponto Estagio.xlsx
/Admissao/Admiss_geral.py
/Admissao/alteracoes.txt
/Admissao/Banco.xlsx
/Admissao/Banco - Total.xlsx
/Admissao/cadastrar_banco.py
/Admissao/Cadastro de Funcionário (respostas).xlsx
/Admissao/Cadastro Est Cia (respostas).xlsx
/Admissao/Cadastro Funcionários.xlsm
/Admissao/Classes.py
/Admissao/colaboradores.db
/Admissao/function.py
/Admissao/Matriculas para atualizar banco.txt
/Admissao/Salva_docs_peloExcel.py
/Admissao/teste.py
/Admissao/testexy.py
/Contatos diversos/Envia_email_peloExcel.py
/Desempenho/AV.xlsm
/Desempenho/AV.xlsx
/Desempenho/Resultados Individuais AV.xlsm
/Emissao de contracheques/Contracheque.xlsx
/Lanca folha/Lancamentos.xlsx
/Personal/Relatorios/2024/
/Personal/Relatorios/2025/
/Personal/Relatorios/2023/
/Personal/Relatorios/2026/
/Personal/Relatorios/2027/
/Personal/Relatorios/2028/
/Personal/Relatorios/2029/
/Personal/Relatorios/2030/
/Personal/Relatorios/2031/
/Personal/Relatorios/2032/
/Personal/Relatorios/2033/
/Personal/Relatorios/
/Personal/alterar_banco.py
/Personal/Alterações.txt
/Personal/Nomes.xlsx
/Personal/personais.db
/Personal/personal.py
/Personal/personal.zip
/Personal/teste.py
/Ponto/txt/
/Ponto/xls/
/Ponto/xls - Copia/
/Ponto/xls - periodo folha fevereiro 2023/
/Ponto/xls 1/
/Ponto/xls 1 a 15/
/Ponto/xls 1 a 15 Fevereiro 2023/
/Ponto/xls 16 a 28 Fevereiro 2023/
/Ponto/Alterações.txt
/Ponto/Func.pdf
/Ponto/Func.xlsx
/Ponto/Macro organizar ponto estágio.xlsm
/Ponto/Matricula e email.xlsx
/Ponto/Plan completa.xls
/Ponto/Plan completa fevereiro.xls
/Ponto/Plan estag controlid.xlsx
/Ponto/PlanPonto.xlsx
/Ponto/Rejeitados.txt
/Ponto/Rejeitados.xlsx
/Ponto/Rejeitados fev.txt
/Ponto/Rejeitados jan.txt
/Ponto/Rejeitados ponto 31.01.txt
/Ponto/Rejeitados 1 a 15.txt
/Ponto/Relatorio ponto.xlsx
/Ponto/Relogio.txt
/Ponto/teste.py
/Solicitacao de pagamento/
/Treinamento Certificados/Certificados/
/Treinamento Certificados/E-mail.xlsx
/Treinamento Certificados/Listas Primeiros Socorros_001.pdf
/Treinamento Certificados/Treinamento.xlsx
/Treinamento Certificados/TreinamentoAquat1.docx
/Treinamento Certificados/TreinamentoAquat2.docx
/Treinamento Certificados/TreinamentoAquat7.docx
/Treinamento Certificados/TreinamentoAquat28.docx
/Treinamento Certificados/TreinamentoTerrestre1.docx
/Treinamento Certificados/TreinamentoTerrestre2.docx
/Treinamento Certificados/TreinamentoTerrestre7.docx
/Treinamento Certificados/TreinamentoTerrestre28.docx
/Treinamento Certificados/~$Treinamento.xlsx
/Uniformes/gerar_recibo_class.py
/Uniformes/teste.py
/Uniformes/Relatorio.xlsx
/pull_da_rede.py
/push_para_rede.py
/testes grade.py
/Contatos diversos/dados.py
/Contatos diversos/Nomes e e-mails.xlsx
